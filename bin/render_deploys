#!/usr/bin/env ruby
#
# Run from the root of a repository. |deploy.json| is expected to exist there.
# Generates all deploys based on permutations defined in deploy.yml combined
# with cluster configuration from kube_deploy_tools.

require 'optparse'

require 'render_deploys'

class Optparser

  class RenderDeploysOptions
    attr_accessor :manifest_file, :input_path, :output_path

    def initialize
      self.manifest_file = 'deploy.yml'
      self.input_path = File.expand_path('kubernetes/')
			self.output_path = File.expand_path('pkg/kubernetes/')
    end

    def define_options(parser)
      parser.on('-mMANIFEST', '--manifest MANIFEST', 'The configuration MANIFEST to render deploys with.') do |f|
        self.manifest = f
      end

      parser.on('-iPATH', '--input-path PATH', 'Path where Kubernetes manifests and manifest templates (.erb) are located.') do |p|
        self.input_path = p
      end

      parser.on('-oPATH', '--output-path PATH', 'Path where rendered manifests should be written.') do |p|
        self.output_path = p
      end
    end

  end

  def parse(args)
    @options = RenderDeploysOptions.new
    OptionParser.new do |parser|
      @options.define_options(parser)
      parser.parse(args)
    end
    @options
  end
end

def options
  $options ||= begin
    parser = Optparser.new
    parser.parse(ARGV)
  end
end

app = RenderDeploys.new(options.manifest_file, options.input_path, options.output_path)
app.render
