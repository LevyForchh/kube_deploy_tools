#!/usr/bin/env ruby
# Utility for templating Kubernetes manifests with ERB.
#
# Example usage:
#
# push \
# --registry aws \
# --local-prefix local-registry/ \
# --tag my-custom-tag \
# image1 image2 image3
#
# Will tag local-registry/image1:latest, local-registry/image2:latest etc. as
# 123456.dkr.ecr.us-west-2.amazonaws.com/image1:my-custom-tag.
# Default values for every option are probably what you want to use most of the time.

require 'optparse'

require 'kube_deploy_tools/push'
require 'kube_deploy_tools/push/options'

require 'kube_deploy_tools/formatted_logger'
require 'kube_deploy_tools/shellrunner'

def options
  $options ||= begin
    parser = KubeDeployTools::Push::Optparser.new
    parser.parse(ARGV)
  end
end

def images
  # Make sure options have been parsed
  options

  # The rest of ARGV is now the list of images to retag
  if ARGV.empty?
    msg = %q(Must supply at least one image

Example usage:

push \
--local-prefix local-registry/ \
--tag my-custom-tag \
image1 image2 image3
    )
    puts msg
    exit(1)
  end

  ARGV
end

KubeDeployTools::Logger.logger = KubeDeployTools::FormattedLogger.build
KubeDeployTools::Shellrunner.shellrunner = KubeDeployTools::Shellrunner.new
config = KubeDeployTools::DeployConfigFile.new(options.manifest_file)

KubeDeployTools::Push.new(config, options.local_prefix, options.registries, images, options.tag).publish
