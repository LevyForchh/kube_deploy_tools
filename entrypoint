#!/bin/bash
# Example usage:
#   docker run \
#     -v $(pwd):/app \
#     -v /var/run/docker.sock:/var/run/docker.sock \
#     local-registry/kube_deploy_tools "kdt render_deploys"

set -e

KDT_USER=kdt
RUN_AS_KDT="su-exec $KDT_USER"
LOCAL_UID=$(stat -c '%u' /app)

# Allow local user to share docker daemon socket.
DOCKER_HOST="/var/run/docker.sock"
if [[ -S ${DOCKER_HOST} ]]; then
  DOCKER_GID=$(stat -c '%g' "${DOCKER_HOST}")
fi

# Use a local user to properly share volume mounts under /app.
/usr/sbin/useradd -o -u "${LOCAL_UID}" -g "${DOCKER_GID}" -d "/home/$KDT_USER" -m -s /bin/bash "$KDT_USER"

# Allow local user to create directories under /app.
chown --quiet "$KDT_USER" /app

# If set, symlink kubectl version based on environment variable
if [[ -n "$KUBECTL_VERSION" ]]; then
  if ! [ -e /usr/local/bin/kubernetes/versions/${KUBECTL_VERSION}/kubectl ]; then
    echo -e "Environment variable, KUBECTL_VERSION, specifed an unsupported kubectl version: ${KUBECTL_VERSION}\n\nSupported versions:"
    ls /usr/local/bin/kubernetes/versions/ | sort -t. -k 2n,2 -k 3n,3
    exit 1
  fi
  ln -sf /usr/local/bin/kubernetes/versions/${KUBECTL_VERSION}/kubectl /usr/local/bin/kubectl
fi

# Authenticate to gcloud as local user
if [[ -z "$GOOGLE_APPLICATION_CREDENTIALS" ]]; then
  echo "WARNING: no Google Credentials set, gcloud commands might fail"
else
  $RUN_AS_KDT gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
fi

exec $RUN_AS_KDT "$@"
